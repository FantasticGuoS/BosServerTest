<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="  
         http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
         http://www.springframework.org/schema/context 
         http://www.springframework.org/schema/context/spring-context-4.1.xsd  
         http://www.springframework.org/schema/tx 
         http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
         http://www.springframework.org/schema/task 
         http://www.springframework.org/schema/task/spring-task-4.1.xsd">

	<!-- 启用Spring注解处理器 -->
	<context:annotation-config />

	<!-- 自动扫描所有注解，完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.sungeon.bos" />

	<!-- 启用基于@AspectJ切面的注解处理器 -->
	<aop:aspectj-autoproxy />

	<!-- 启用task任务扫描注解 -->
	<task:annotation-driven />

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:dbcp.properties</value>
				<value>classpath:system.properties</value>
			</list>
		</property>
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="protocol" value="${Param.Mail.Transport.Protocol}"></property>
		<property name="host" value="${Param.Mail.Host}"></property>
		<property name="port" value="${Param.Mail.Port}"></property>
		<property name="username" value="${Param.Mail.Username}"></property>
		<property name="password" value="${Param.Mail.Password}"></property>
	</bean>

	<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="classpath:template" /> <!-- 指定模板文件目录 -->
		<property name="freemarkerSettings"><!-- 设置FreeMarker环境属性 -->
			<props>
				<prop key="template_update_delay">1800</prop> <!--刷新模板的周期，单位为秒 -->
				<prop key="default_encoding">UTF-8</prop> <!--模板的编码格式 -->
				<prop key="locale">zh_CN</prop> <!--本地化设置 -->
			</props>
		</property>
	</bean>
	
	<bean id="quartzJobFactory" class="com.sungeon.bos.job.QuartzJobFactory"></bean>
	<bean id="schedulerFactoryBean"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobFactory" ref="quartzJobFactory"></property>
	</bean>

	<!-- 配置数据源Default -->
	<bean id="dataSourceDefault" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.oracle.default.driverClassName}" />
		<property name="url" value="${jdbc.oracle.default.url}" />
		<property name="username" value="${jdbc.oracle.default.username}" />
		<property name="password" value="${jdbc.oracle.default.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<!-- 连接池最大空闲 -->
		<!-- <property name="maxIdle" value="${jdbc.maxIdle}" /> -->
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"></property>
	</bean>

	<!-- 配置数据源Second -->
	<bean id="dataSourceSecond" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.oracle.second.driverClassName}" />
		<property name="url" value="${jdbc.oracle.second.url}" />
		<property name="username" value="${jdbc.oracle.second.username}" />
		<property name="password" value="${jdbc.oracle.second.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"></property>
	</bean>

	<bean id="dataSource" class="com.sungeon.bos.dbcp.ThreadLocalRountingDataSource">
		<property name="defaultTargetDataSource" ref="dataSourceDefault" />
		<property name="targetDataSources">
			<map key-type="com.sungeon.bos.dbcp.DataSourceType">
				<entry key="DEFAULT" value-ref="dataSourceDefault" />
				<!-- <entry key="SECOND" value-ref="dataSourceSecond" /> -->
			</map>
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- mapper bean package -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sungeon.bos.mapper" />
	</bean>

	<!-- 事务管理器配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="RuntimeException" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="RuntimeException" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="RuntimeException" />
			<tx:method name="modify*" propagation="REQUIRED"
				rollback-for="RuntimeException" />
			<tx:method name="*Batch" propagation="REQUIRED"
				rollback-for="RuntimeException" />
			<tx:method name="batchUpdate*" propagation="REQUIRED"
				rollback-for="RuntimeException" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="RuntimeException" />
			<tx:method name="call*" propagation="REQUIRED"
				rollback-for="RuntimeException" />
			<tx:method name="excute*" propagation="REQUIRED"
				rollback-for="RuntimeException" />
			<tx:method name="getNew*" propagation="REQUIRES_NEW"
				rollback-for="RuntimeException" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- <aop:config> <aop:pointcut id="aopPointCut" expression="execution(* 
		com.sungeon.bos.dao.*.*(..))" /> <aop:advisor pointcut-ref="aopPointCut" 
		advice-ref="txAdvice" /> </aop:config> -->

	<import resource="classpath:jaxws-config.xml" />

</beans>